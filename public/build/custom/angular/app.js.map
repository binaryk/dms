{"version":3,"sources":["_config.js","controllers.js","MainCtrl.js","FileStructureCtrl.js","PostsCtrl.js","services.js","FileStructureService.js","PostsService.js","directives.js","bn-input.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["import angular from \"angular\";\r\nimport contextMenu from \"angular-bootstrap-contextmenu\";\r\nimport ui_bootstrap from \"angular-ui-bootstrap\";\r\nimport ui_tree from 'angular-ui-tree';\r\nimport * as ld from 'lodash';\r\n\r\n\r\nvar dms = angular.module('dms', ['dms.controllers','dms.directives','dms.services', 'ui.bootstrap.contextMenu','ui.bootstrap','ui.tree'])\r\n    .constant('treeConfig', {\r\n        treeClass: 'angular-ui-tree',\r\n        emptyTreeClass: 'angular-ui-tree-empty',\r\n        hiddenClass: 'angular-ui-tree-hidden',\r\n        nodesClass: 'angular-ui-tree-nodes',\r\n        nodeClass: 'angular-ui-tree-node',\r\n        handleClass: 'angular-ui-tree-handle',\r\n        placeholderClass: 'angular-ui-tree-placeholder',\r\n        dragClass: 'angular-ui-tree-drag',\r\n        dragThreshold: 3,\r\n        levelThreshold: 30,\r\n        defaultCollapsed: false\r\n    })\r\n    .config(function($interpolateProvider, $locationProvider) {\r\n        $interpolateProvider.startSymbol('[[');\r\n        $interpolateProvider.endSymbol(']]');\r\n       /* $locationProvider.html5Mode({\r\n            enabled: true,\r\n            requireBase: false\r\n        });*/\r\n    })\r\n    .run(function($rootScope){\r\n        $rootScope.config = _config;\r\n    })","'use strict'\r\nexport const controllers = angular.module('dms.controllers',[]);","'use strict'\r\nfunction MainCtrl($scope){\r\n}\r\n\r\nMainCtrl.$inject = ['$scope'];\r\ncontrollers.controller('MainCtrl', MainCtrl);","'use strict'\r\nvar FileStructureCtrl = function($scope, FileStructureService,$uibModal, $compile){\r\n    const that = this;\r\n    that.selectedDirScope = null;\r\n    that.sync_modal = null;\r\n    that.addDirectory = () =>{\r\n        that.addDir = ! that.addDir;\r\n    }\r\n\r\n    that.get = () => {\r\n        FileStructureService.get().then(data => {\r\n            that.files =  $.map(data.files, function(value) {\r\n                return [value];\r\n            });\r\n            console.log(that.files);\r\n        });\r\n    }\r\n\r\n    that.open = function (scope) {\r\n        var current_dir = scope.$modelValue\r\n        that.selectedDirScope = current_dir;\r\n        var modalInstance = $uibModal.open({\r\n            animation: that.animationsEnabled,\r\n            templateUrl: 'addDirector.html',\r\n            controller: 'ModalDirectorCtrl',\r\n            resolve: {\r\n                fss: () =>  FileStructureService,\r\n                current_dir: () => current_dir\r\n            }\r\n        });\r\n        modalInstance.result.then(function (dirName) {\r\n            if(dirName){\r\n                that.storeChildDirectory(current_dir, dirName);\r\n            }else{\r\n                console.log('Only close modal!');\r\n            }\r\n        }, () => {\r\n            console.log('Close modal');\r\n        });\r\n    };\r\n\r\n    that.goToFolder = (id) => {\r\n        location.href = 'director-files/' + id;\r\n    }\r\n\r\n    that.storeDirectory = () => {\r\n        that.form.type = 'director';\r\n        FileStructureService.store(that.form)\r\n            .then(data => {\r\n                if(data.code === 200){\r\n                    console.log(data);\r\n                    that.addDir = false;\r\n                    that.files.push(data.inserted);\r\n                    that.form = {};\r\n                    console.log(that.files);\r\n                }else{\r\n                    alert('Erorr: '+data.msg);\r\n                }\r\n            });\r\n    }\r\n\r\n    that.storeChildDirectory = (parent, dirName) => {\r\n        console.log('parent', parent);\r\n\r\n        const form = {\r\n            parent: parent,\r\n            current: {\r\n                name: dirName,\r\n                type: 'director'\r\n            }\r\n        };\r\n\r\n        FileStructureService.store(form).then(data => {\r\n            if(data.code === 200){\r\n                console.log(data.inserted);\r\n                if(parent.children){\r\n                    parent.children.push(data.inserted);\r\n                }else{\r\n                    parent.children = [ data.inserted ];\r\n                }\r\n            }else{\r\n                alert('Erorr: '+data.msg);\r\n            }\r\n        });\r\n    }\r\n\r\n    that.removeDir = ($itemScope) => {\r\n        if($itemScope.$parent['file'] === undefined){\r\n            delete that.files[$itemScope.file.id];\r\n        }else{\r\n            const parentChildrens = $itemScope.$parent.file.children;\r\n            const index  = parentChildrens.indexOf($itemScope.file);\r\n            parentChildrens.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    that.removeItem = function (scope) {\r\n        var afirm = new App.Afirm();\r\n        afirm.question('Ștergere director', 'Sunteți sigur că doriți să stergeți acest director ? El (poate) include alte directoare și fișiere','warning');\r\n        afirm.onConfirm = function(){\r\n            scope.remove();\r\n            FileStructureService.remove(scope.$modelValue.id).then(data => {\r\n                if(data.code === 200){\r\n                }else{\r\n                    alert('Erorr');\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    $scope.toggle = function (scope) {\r\n        scope.toggle();\r\n    };\r\n\r\n    $scope.moveLastToTheBeginning = function () {\r\n        var a = $scope.data.pop();\r\n        $scope.data.splice(0, 0, a);\r\n    };\r\n\r\n\r\n\r\n    that.init = () => {\r\n        that.form = {};\r\n        that.addDir = false;\r\n        that.files = [];\r\n        that.animationsEnabled = true;\r\n        that.menuOptions = [\r\n            ['Creeaza subdirector', ($itemScope, event) => {\r\n                that.selectedDirScope = {\r\n                    scope: $itemScope,\r\n                    event: event\r\n                };\r\n                that.open($itemScope.file)\r\n            }],\r\n            null,\r\n            ['Adauga fisiere', $itemScope => {\r\n                $scope.items.splice($itemScope.$index, 1);\r\n            }],\r\n            null,\r\n            ['Sterge', ($itemScope, event) => {\r\n                console.log('$scope.$modelValue',$itemScope, $itemScope.$modelValue, event);\r\n                //$itemScope.remove();\r\n                //that.removeDir($itemScope);\r\n\r\n            }]\r\n        ];\r\n\r\n        that.sync_modal = new App.Ui.Modal({'id' : '#sync_modal'});\r\n        that.sync_modal.sync = that.sync_requst;\r\n    }\r\n\r\n    that.sync_requst = () =>  {\r\n        const path = $('#path').val();\r\n        that.sync_modal.hide();\r\n        Spinner.show();\r\n        FileStructureService.sync(path).then(data => {\r\n            console.log(data);\r\n            Spinner.hide(2000, () => {\r\n                var afirm = new App.Afirm();\r\n                if(data.code == 200){\r\n                    afirm.success(\"Sincronizarea a avut loc cu succes\");\r\n                }else{\r\n                    afirm.error(\"Atentie, a intervenit o eroare cu mesajul: \"+data.msg);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    that.sync = () => {\r\n        that.sync_modal.show();\r\n    }\r\n\r\n    this.init();\r\n    this.get();\r\n}\r\n\r\nFileStructureCtrl.$inject = ['$scope','FileStructureService','$uibModal', '$compile'];\r\ncontrollers.controller('FileStructureCtrl', FileStructureCtrl);\r\n\r\ncontrollers.controller('ModalDirectorCtrl', function ($scope, $uibModalInstance, fss, current_dir) {\r\n    $scope.name = '';\r\n    $scope.current_name = current_dir.name;\r\n    $scope.store = () => {\r\n        $uibModalInstance.close($scope.name);\r\n    }\r\n\r\n    $scope.cancel = () => {\r\n        console.log('cancel');\r\n        $uibModalInstance.close(null);\r\n    }\r\n});\r\n\r\ncontrollers.directive('nestedItem', ['$compile', function($compile){\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, element){\r\n            if (scope.file.children){\r\n                var html = $compile('<ul><li nested-item ng-repeat=\"file in file.children\" context-menu=\"fs.menuOptions\">[[file.name]]</li></ul>')(scope);\r\n                element.append(html);\r\n            }\r\n        }\r\n    };\r\n}]);\r\n","'use strict'\r\n\r\nconst PostsCtrl = function($scope, PostsService, $compile, $location){\r\n    const _that = this;\r\n    this.posts = [];\r\n    this.data = [];\r\n    this.query = {};\r\n\r\n    this.query = $location.search();\r\n\r\n    this.init = () => {\r\n        $scope.$watch(function(){ return $location.search() }, function(){\r\n            console.log('change',_that.data);\r\n            _that.query = $location.search();\r\n            _that.filters(_that.data);\r\n        });\r\n    }\r\n\r\n    setTimeout(_that.init(), 1000);\r\n\r\n    this.filters = (data) => {\r\n        console.log('filter',_that.posts, data);\r\n        if(this.query.start && this.query.stop){\r\n            _that.posts = data.slice(_that.query.start,_that.query.stop)\r\n        }else{\r\n            this.query.start = null;\r\n            this.query.stop = null;\r\n            if(this.query.count){\r\n                _that.posts = _.take(data, this.query.count)\r\n            }else{\r\n                this.query.count = null;\r\n                if(this.query.find){\r\n                    _that.posts = [ data[this.query.find] ]\r\n                }else{\r\n                    _that.posts = data;\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log('after filter',_that.posts);\r\n    }\r\n\r\n\r\n    this.onGet = (data) => {\r\n        console.log('OnGetData',data);\r\n\r\n        _that.posts =data.records.record;\r\n        _that.data = data.records.record;\r\n        _that.filters(_that.data);\r\n        console.log('_that.posts',_that.posts);\r\n    }\r\n    PostsService.get(_that.onGet)\r\n}\r\n\r\n\r\nPostsCtrl.$inject = ['$scope','PostsService','$compile', '$location'];\r\ncontrollers.controller('PostsCtrl', PostsCtrl);\r\n","'use strict'\r\n\r\nconst services = angular.module('dms.services',[]);","'use strict'\r\nservices.factory('FileStructureService', ['$rootScope','$http', function($rootScope, $http){\r\n    var mixin = {};\r\n\r\n    mixin.store = function(data){\r\n        var promise = $http.post($rootScope.config.file_structure_store, {data: data}).then( response => response.data  );\r\n        return promise;\r\n    }\r\n\r\n    mixin.remove = function(data){\r\n        var promise = $http.post($rootScope.config.file_structure_remove, {data: data}).then( response => response.data  );\r\n        return promise;\r\n    }\r\n\r\n    mixin.sync = function(data){\r\n        var promise = $http.post($rootScope.config.file_structure_sync, {data: data}).then( response => response.data  );\r\n        return promise;\r\n    }\r\n\r\n    mixin.get = function(){\r\n        const promise = $http.get($rootScope.config.file_structure_get).then( response => response.data );\r\n        return promise;\r\n    }\r\n   /* mixin.find = function(id){\r\n        var todo = {};\r\n        $.post($rootScope.config.todo_find,{todo_id: id}, function(data){\r\n            todo = data;\r\n        });\r\n        return todo;\r\n    }\r\n\r\n\r\n    mixin.put = function(id, data){\r\n        var todo = {};\r\n        console.log($rootScope.config.todo_put);\r\n        $.post($rootScope.config.todo_put,{id: id, data: data}, function(data){\r\n            todo = data;\r\n        });\r\n        return todo;\r\n    }\r\n\r\n\r\n\r\n    mixin.delete_ = function(id){\r\n        $.post($rootScope.config.todo_delete,{id: id}, function(data){\r\n            // todo = data;\r\n        });\r\n    }\r\n\r\n    mixin.start = function(id){\r\n        $.post($rootScope.config.todo_start,{id: id}, function(data){\r\n            // todo = data;\r\n        });\r\n    }\r\n\r\n    mixin.stop = function(id){\r\n        $.post($rootScope.config.todo_stop,{id: id}, function(data){\r\n            // todo = data;\r\n        });\r\n    }\r\n\r\n\r\n    mixin.all = function(){\r\n        var todos = [];\r\n        $.get($rootScope.config.todo_get, function(data){\r\n            todos = data;\r\n        });\r\n        return todos;\r\n    }*/\r\n\r\n    return mixin;\r\n\r\n}])","'use strict'\r\nservices.factory('PostsService', ['$rootScope','$http', function($rootScope, $http){\r\n    const mixin = {};\r\n\r\n\r\n    mixin.get = function(callback){\r\n        $http.get(\r\n            'custom/data/posts.xml',\r\n            {transformResponse:function(data) {\r\n                // convert the data to JSON and provide\r\n                // it to the success function below\r\n                var x2js = new X2JS();\r\n                var json = x2js.xml_str2json( data );\r\n                return json;\r\n            }\r\n            }\r\n        ).\r\n        success(function(data, status) {\r\n            // send the converted data back\r\n            // to the callback function\r\n            callback(data);\r\n        })\r\n    }\r\n    return mixin;\r\n\r\n}])","'use strict'\r\nexport const directives = angular.module('dms.directives',[]);\r\n","'use strict'\r\nconsole.log('directive');\r\n\r\ndirectives.directive('bnInput', function(){\r\n    return {\r\n        restrict: 'EA',\r\n        templateUrl: 'resources/assets/js/angular/directives/bnInput/input.html',\r\n        scope: true,\r\n        controller: function($scope){\r\n            console.log('inside directive bn-input');\r\n            console.log('scope',$scope);\r\n        }\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}