{"version":3,"sources":["_config.js","controllers.js","MainCtrl.js","FileStructureCtrl.js","services.js","FileStructureService.js","directives.js","bn-input.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["console.log('config');\r\nimport angular from \"angular\";\r\nimport contextMenu from \"angular-bootstrap-contextmenu\";\r\nimport ui_bootstrap from \"angular-ui-bootstrap\";\r\n\r\nvar dms = angular.module('dms', ['dms.controllers','dms.directives','dms.services', 'ui.bootstrap.contextMenu','ui.bootstrap'])\r\n    .config(function($interpolateProvider) {\r\n        $interpolateProvider.startSymbol('[[');\r\n        $interpolateProvider.endSymbol(']]');\r\n    })\r\n    .run(function($rootScope){\r\n        $rootScope.config = _config;\r\n    })","'use strict'\r\nconsole.log('controllers');\r\n\r\nexport const controllers = angular.module('dms.controllers',[]);","'use strict'\r\nconsole.log('MainCtrl');\r\n\r\nfunction MainCtrl($scope){\r\n    console.log('MainCtrl inside');\r\n}\r\n\r\nMainCtrl.$inject = ['$scope'];\r\ncontrollers.controller('MainCtrl', MainCtrl);","'use strict'\r\nconsole.log('File str');\r\n\r\nvar FileStructureCtrl = function($scope, FileStructureService,$uibModal){\r\n    const that = this;\r\n    that.addDirectory = () =>{\r\n        that.addDir = ! that.addDir;\r\n    }\r\n\r\n    that.get = () => {\r\n        FileStructureService.get().then(data => that.files = data.files );\r\n    }\r\n\r\n    that.test = () => {\r\n        alert('asas')\r\n    }\r\n\r\n    that.open = function (size) {\r\n        var modalInstance = $uibModal.open({\r\n            animation: that.animationsEnabled,\r\n            templateUrl: 'myModalContent.html',\r\n            //controller: 'ModalInstanceCtrl',\r\n            size: size,\r\n            resolve: {\r\n                items: function () {\r\n                    return that.files;\r\n                }\r\n            }\r\n        });\r\n        modalInstance.result.then(function (selectedItem) {\r\n            //$scope.selected = selectedItem;\r\n            console.log('modall');\r\n        }, function () {\r\n            console.log('MoDADSAD');\r\n        });\r\n    };\r\n\r\n    that.ok = function () {\r\n        console.log('asdas');\r\n        \r\n        $uibModalInstance.close('xxx');\r\n    };\r\n\r\n    that.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n\r\n    that.storeDirectory = () => {\r\n    that.form.type = 'director';\r\n    FileStructureService.store(that.form)\r\n        .then(data => {\r\n            if(data.code === 200){\r\n                that.addDir = false;\r\n            }else{\r\n                alert('Erorr');\r\n            }\r\n        });\r\n    }\r\n\r\n    that.draw = () => {\r\n\r\n    }\r\n\r\n    that.init = () => {\r\n        that.form = {};\r\n        that.addDir = false;\r\n        that.files = [];\r\n        that.animationsEnabled = true;\r\n        that.menuOptions = [\r\n            ['Creeaza subdirector', $itemScope => {\r\n                $scope.selected = $itemScope.item.name;\r\n            }],\r\n            null,\r\n            ['Adauga fisiere', $itemScope => {\r\n                $scope.items.splice($itemScope.$index, 1);\r\n            }],\r\n            null,\r\n            ['Sterge', $itemScope => {\r\n                that.files.splice($itemScope.$index, 1);\r\n            }]\r\n        ];\r\n    }\r\n\r\n    this.init();\r\n    this.get();\r\n    this.draw();\r\n}\r\n\r\nFileStructureCtrl.$inject = ['$scope','FileStructureService','$uibModal'];\r\ncontrollers.controller('FileStructureCtrl', FileStructureCtrl);\r\ncontrollers.controller('ModalInstanceCtrl', function ($scope, $uibModalInstance, items) {\r\n\r\n    $scope.items = items;\r\n    $scope.selected = {\r\n        item: $scope.items[0]\r\n    };\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close($scope.selected.item);\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});\r\n","'use strict'\r\n\r\nconst services = angular.module('dms.services',[]);","'use strict'\r\nservices.factory('FileStructureService', ['$rootScope','$http', function($rootScope, $http){\r\n    var mixin = {};\r\n\r\n    mixin.store = function(data){\r\n        var rest = {};\r\n        var promise = $http.post($rootScope.config.file_structure_store, {data: data}).then( response => response.data  );\r\n        return promise;\r\n    }\r\n\r\n    mixin.get = function(){\r\n        const promise = $http.get($rootScope.config.file_structure_get).then( response => response.data );\r\n        return promise;\r\n    }\r\n   /* mixin.find = function(id){\r\n        var todo = {};\r\n        $.post($rootScope.config.todo_find,{todo_id: id}, function(data){\r\n            todo = data;\r\n        });\r\n        return todo;\r\n    }\r\n\r\n\r\n    mixin.put = function(id, data){\r\n        var todo = {};\r\n        console.log($rootScope.config.todo_put);\r\n        $.post($rootScope.config.todo_put,{id: id, data: data}, function(data){\r\n            todo = data;\r\n        });\r\n        return todo;\r\n    }\r\n\r\n\r\n\r\n    mixin.delete_ = function(id){\r\n        $.post($rootScope.config.todo_delete,{id: id}, function(data){\r\n            // todo = data;\r\n        });\r\n    }\r\n\r\n    mixin.start = function(id){\r\n        $.post($rootScope.config.todo_start,{id: id}, function(data){\r\n            // todo = data;\r\n        });\r\n    }\r\n\r\n    mixin.stop = function(id){\r\n        $.post($rootScope.config.todo_stop,{id: id}, function(data){\r\n            // todo = data;\r\n        });\r\n    }\r\n\r\n\r\n    mixin.all = function(){\r\n        var todos = [];\r\n        $.get($rootScope.config.todo_get, function(data){\r\n            todos = data;\r\n        });\r\n        return todos;\r\n    }*/\r\n\r\n    return mixin;\r\n\r\n}])","'use strict'\r\n\r\nexport const directives = angular.module('dms.directives',[]);\r\n","'use strict'\r\nconsole.log('directive');\r\n\r\ndirectives.directive('bnInput', function(){\r\n    return {\r\n        restrict: 'EA',\r\n        templateUrl: 'resources/assets/js/angular/directives/bnInput/input.html',\r\n        scope: true,\r\n        controller: function($scope){\r\n            console.log('inside directive bn-input');\r\n            console.log('scope',$scope);\r\n        }\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}